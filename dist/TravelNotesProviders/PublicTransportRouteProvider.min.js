/**
 * 
 * @source: https://github.com/wwwouaiebe/leaflet.TravelNotes
 * 
 * @licstart  The following is the entire license notice for the
 * JavaScript code in this page.
 * 
 * leaflet.travelnotes - version 2.2.0
 * Build 00828 - 2021-04-04T16:50:53+0200 
 * Copyright 2017 2021 wwwouaiebe 
 * Contact: https://www.ouaie.be/
 * License: GPL-3.0
 * 
 * The JavaScript code in this page is free software: you can
 * redistribute it and/or modify it under the terms of the GNU
 * General Public License (GNU GPL) as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option)
 * any later version.  The code is distributed WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.
 * 
 * As additional permission under GNU GPL version 3 section 7, you
 * may distribute non-source (e.g., minimized or compacted) forms of
 * that code without the copy of the GNU GPL normally required by
 * section 4, provided you include this license notice and a URL
 * through which recipients can access the Corresponding Source.
 * 
 * @licend  The above is the entire license notice
 * for the JavaScript code in this page.
 * 
 */


!function(){"use strict";
/**
	@------------------------------------------------------------------------------------------------------------------------------

	@file Constants.js
	@copyright Copyright - 2017 2021 - wwwouaiebe - Contact: https://www.ouaie.be/
	@license GNU General Public License
	@private

	@------------------------------------------------------------------------------------------------------------------------------
	*/Object.freeze({notSaved:"ðŸ”´",modified:"ðŸŸ¡",saved:"ðŸŸ¢"}),Object.freeze({fixed:2,invalid:-1,defaultValue:0,metersInKm:1e3}),Object.freeze({refusedByUser:-1,disabled:0,inactive:1,active:2}),Object.freeze({invalidPane:"43a6a53e-008a-4910-80a6-7a87d301ea15",itineraryPane:"8fbf0da7-4e6f-4bc7-8e20-1388461ccde7",travelNotesPane:"dffe782b-07df-4b81-a318-f287c0cf5ec6",searchPane:"228f00d7-43a8-4c13-897d-70400cb6dd58"}),Object.freeze({fixed:2,defaultValue:0});const e=Object.freeze({defaultValue:0,fixed:6,maxLat:90,minLat:-90,maxLng:180,minLng:-180}),t=(Object.freeze({notEdited:0,editedNoChange:1,editedChanged:2}),Object.freeze({margin:100,height:500,width:1e3,yDeltaText:30,xDeltaText:10,vScales:[1,2,5,10,20,50,100,200,500,1e3,2e3,5e3],hScales:[1,2,5,10,20,50,100,200,500,1e3,2e3,5e3,1e4,2e4,5e4,1e5]}),Object.freeze({width:40,height:40,svgViewboxDim:200}),Object.freeze({d0:0,d90:90,d180:180,d270:270,d360:360,d540:540,toRadians:Math.PI/180,fromRadians:180/Math.PI}));function n(e){return(e+t.d540)%t.d360-t.d180}const s=new class{constructor(){Object.freeze(this)}arcFromSummitArcArc(e,t,n){return Math.acos(Math.cos(t)*Math.cos(n)+Math.sin(t)*Math.sin(n)*Math.cos(e))}summitFromArcArcArc(e,t,n){return Math.acos((Math.cos(n)-Math.cos(e)*Math.cos(t))/(Math.sin(e)*Math.sin(t)))}pointsDistance(e,s){if(e[0]===s[0]&&e[1]===s[1])return 0;let a=e[0]*t.toRadians,d=s[0]*t.toRadians,i=(n(s[1])-n(e[1]))*t.toRadians;return 6371e3*Math.acos(Math.sin(a)*Math.sin(d)+Math.cos(a)*Math.cos(d)*Math.cos(i))}};let a="fr",d=null,i=-1,r=new Map,o=new Map,c=new Map,l=-1,u=0,h=[];function g(e){return e[0]}function f(e){return e[e.length-1]}function y(e,t){e.splice(e.indexOf(t),1)}function I(e){let t=o.get(g(e.nodesIds)),n=o.get(f(e.nodesIds));y(t.startingWaysIds,e.id),t.endingWaysIds.push(e.id),y(n.endingWaysIds,e.id),n.startingWaysIds.push(e.id),e.nodesIds.reverse()}function p(e,t){let n=r.get(e),s=r.get(t);f(n.nodesIds)===f(s.nodesIds)?I(s):g(n.nodesIds)===g(s.nodesIds)?I(n):g(n.nodesIds)===f(s.nodesIds)&&(I(n),I(s));let a=o.get(n.nodesIds.pop());a.startingWaysIds=[],a.endingWaysIds=[],n.nodesIds=n.nodesIds.concat(s.nodesIds),n.distance+=s.distance;let d=o.get(f(n.nodesIds));return y(d.endingWaysIds,s.id),d.endingWaysIds.push(n.id),r.delete(s.id),n.id}function m(e){let t=r.get(e),n={id:l--,type:"way",nodesIds:[],distance:t.distance};return t.nodesIds.forEach(e=>n.nodesIds.push(function(e){let t=o.get(e),n={id:l--,lat:t.lat,lon:t.lon,type:"node",startingWaysIds:[],endingWaysIds:[],isNode3Ways:t.isNode3Ways};return o.set(n.id,n),n.id}(e))),o.get(g(n.nodesIds)).startingWaysIds.push(n.id),o.get(f(n.nodesIds)).endingWaysIds.push(n.id),r.set(n.id,n),n.id}function w(e,t,n){var a;l=-1,h=[],u=0,a=e.elements,r.clear(),o.clear(),c.clear(),a.forEach(e=>{switch(e.type){case"way":e.nodesIds=e.nodes,delete e.nodes,2<=e.nodesIds.length&&(e.distance=0,r.set(e.id,e));break;case"node":e.startingWaysIds=[],e.endingWaysIds=[],e.isNode3Ways=!1,o.set(e.id,e);break;case"relation":e.members.forEach(e=>{"node"===e.type&&e.role&&"stop"===e.role&&c.set(e.ref,e.ref)})}}),c.forEach(e=>{let t=o.get(e);t?c.set(e,t):(window.TaN.showInfo("the relation "+i+" have nodes not positionned on the railway ( node "+e+")."),c.delete(e))}),r.forEach(e=>{o.get(g(e.nodesIds)).startingWaysIds.push(e.id),o.get(f(e.nodesIds)).endingWaysIds.push(e.id);let t=null;e.nodesIds.forEach(n=>{let a=o.get(n);t&&(e.distance+=s.pointsDistance([a.lat,a.lon],[t.lat,t.lon])),t=a})});let I=!1;o.forEach(e=>{let t=e.startingWaysIds.concat(e.endingWaysIds);switch(t.length){case 0:case 1:break;case 2:p(t[0],t[1]);break;case 3:e.isNode3Ways=!0,h.push(e),u++;break;default:I=!0,window.TaN.showInfo("A node with more than 3 ways is found : "+e.id+" - the relation "+i+" - ways "+e.startingWaysIds.concat(e.endingWaysIds))}}),I?n(new Error("A node with more than 3 ways was found in the relation.See the console for more infos")):(r.size>2*u+1&&(!function e(){let t=[];function n(e,n){e.isNode3Ways||n.isNode3Ways||t.push({distance:s.pointsDistance([e.lat,e.lon],[n.lat,n.lon]),nodesId:[e.id,n.id]})}let a=Array.from(r.values()),d=1;a.forEach(e=>{for(let t=d;t<a.length;t++){let s=[];s.push(o.get(g(e.nodesIds))),s.push(o.get(f(e.nodesIds))),s.push(o.get(g(a[t].nodesIds))),s.push(o.get(f(a[t].nodesIds))),n(s[0],s[2]),n(s[0],s[3]),n(s[1],s[2]),n(s[1],s[3])}d++});let i=t[0];t.forEach(e=>{e.distance<i.distance&&(i=e)});let c={id:l--,type:"way",nodesIds:i.nodesId,distance:i.distance};r.set(c.id,c);let h=o.get(i.nodesId[0]),y=h.startingWaysIds.concat(h.endingWaysIds)[0];h.startingWaysIds.push(c.id);let I=o.get(i.nodesId[1]),m=I.startingWaysIds.concat(I.endingWaysIds)[0];I.endingWaysIds.push(c.id),p(p(c.id,y),m),r.size>2*u+1&&e()}(),window.TaN.showInfo("Holes found in the OSM relation number "+i+". Try to correct OSM data.")),0<u&&h.forEach(e=>{let t=Number.MAX_VALUE,n=null,s=e.startingWaysIds.concat(e.endingWaysIds);s.forEach(e=>{let s=r.get(e);s.distance<t&&(t=s.distance,n=s)}),y(s,n.id);let a=r.get(m(n.id)),d=null;g(n.nodesIds)===e.id?(a.nodesIds.pop(),a.nodesIds.push(f(n.nodesIds)),d=g(a.nodesIds)):(a.nodesIds.shift(),a.nodesIds.unshift(g(n.nodesIds)),d=f(a.nodesIds));let i=r.get(s[1]);i.nodesIds[i.nodesIds.indexOf(e.id)]=d,p(p(p(n.id,a.id),s[0]),i.id)}),function(e){let t=null,n=null,a=Number.MAX_VALUE,i=Number.MAX_VALUE;c.forEach(e=>{let r=s.pointsDistance([e.lat,e.lon],d.wayPoints.first.latLng);r<a&&(a=r,t=e),r=s.pointsDistance([e.lat,e.lon],d.wayPoints.last.latLng),r<i&&(i=r,n=e)}),e.itinerary.itineraryPoints.removeAll(),e.itinerary.maneuvers.removeAll(),e.itinerary.hasProfile=!1,e.itinerary.ascent=0,e.itinerary.descent=0;let l=0,u=!1;Array.from(r.values())[0].nodesIds.forEach(s=>{if(0!==l||s!==t.id&&s!==n.id?2!==l||s!==t.id&&s!==n.id||(l=3):(l=1,u=s===n.id),0<l&&4>l){let a=window.TaN.itineraryPoint,d=o.get(s);a.latLng=[d.lat,d.lon],e.itinerary.itineraryPoints.add(a);let i=c.get(s);if(i){let s=window.TaN.maneuver,d=null;i.tags&&i.tags.name&&(d=i.tags.name,s.instruction=d+"&nbsp;:&nbsp;"),i.id===t.id?(d&&(e.wayPoints.first.name=d),s.iconName="kTrainStart",s.instruction+="Monter dans le train"):i.id===n.id?(d&&(e.wayPoints.last.name=d),s.iconName="kTrainEnd",s.instruction+="Descendre du train"):(s.iconName="kTrainContinue",s.instruction+="Rester dans le train"),s.distance=0,s.duration=0,s.itineraryPointObjId=a.objId,e.itinerary.maneuvers.add(s)}}1===l&&(l=2),3===l&&(l=4)}),u&&(e.itinerary.itineraryPoints.reverse(),e.itinerary.maneuvers.reverse()),e.distance=0;let h=e.itinerary.maneuvers.iterator;h.done;let g=h.value;h.done;let f=e.itinerary.itineraryPoints.iterator;f.done;let y=f.value;for(;!f.done;)f.value.distance=0,y.distance=s.pointsDistance(y.latLng,f.value.latLng),e.distance+=y.distance,g.distance+=y.distance,h.value.itineraryPointObjId===f.value.objId&&(g=h.value,g.distance=0,h.done),y=f.value}(d),t(d))}function v(e){if(0===e.elements.length)return Promise.reject(new Error("No relations found"));let t=window.TaN.baseDialog,n=document.createElement("div");n.id="TravelNotes-SelectDialog-SelectDiv",t.content.appendChild(n);let s=document.createElement("select");return s.id="TravelNotes-SelectDialog-SelectElement",n.appendChild(s),t.okButtonListener=function(){return i=e.elements[s.selectedIndex].id},e.elements.forEach(e=>{let t=document.createElement("option");t.text=e.tags.name,s.appendChild(t)}),s.selectedIndex=0,t.show()}function b(t,n){fetch('https://lz4.overpass-api.de/api/interpreter?data=[out:json];node["public_transport"="stop_position"]["train"="yes"](around:400.0,'+d.wayPoints.first.lat.toFixed(e.fixed)+","+d.wayPoints.first.lng.toFixed(e.fixed)+')->.s;rel(bn.s)->.s;node["public_transport"="stop_position"]["train"="yes"](around:400.0,'+d.wayPoints.last.lat.toFixed(e.fixed)+","+d.wayPoints.last.lng.toFixed(e.fixed)+")->.e;rel(bn.e)->.e;rel.e.s;out tags;").then(e=>{200===e.status&&e.ok?e.json().then(v).then(()=>fetch("https://lz4.overpass-api.de/api/interpreter?data=[out:json];rel("+i.toFixed(0)+');way(r)->.e;way.e["railway"="rail"];(._;>;rel('+i.toFixed(0)+"););out;")).then(e=>{200===e.status&&e.ok?e.json().then(e=>w(e,t,n)):n(new Error("An error occurs..."))}).catch(()=>n(new Error("An error occurs..."))):n(new Error("An error occurs..."))})}window.TaN.addProvider(new class{constructor(){Object.freeze(this)}getPromiseRoute(e){return function(e){return d=e,new Promise(b)}(e)}get icon(){return'data:image/svg+xml;utf8,<svg viewBox="-3 -3 20 20" xmlns="http://www.w3.org/2000/svg"> <g fill="rgb(128,0,0)">\t\t\t<path d="M 5,0 C 3.025911,-0.0084 1,3 1,7 l 0,2 c 0,1 1,2 2,2 l 8,0 c 1,0 2,-1 2,-2 L 13,7 C 13,3 11,0 9,0 z m \t\t\t-1,3 6,0 c 0,0 1,1 1,3 L 3.03125,6 C 2.994661,3.9916 4,3 4,3 z M 3,8 6,8 6,9 3,9 z m 5,0 3,0 0,1 -3,0 z m -6,4 \t\t\t-1,2 3,0 1,-2 z m 7,0 1,2 3,0 -1,-2 z"/></g></svg>'}get name(){return"Public Transport on OpenStreetMap"}get transitModes(){return{car:!1,bike:!1,pedestrian:!1,train:!0}}get providerKeyNeeded(){return!1}get providerKey(){return 1}set providerKey(e){}get userLanguage(){return a}set userLanguage(e){a=e}})}();