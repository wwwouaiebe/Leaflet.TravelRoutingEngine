/**
 * 
 * @source: https://github.com/wwwouaiebe/leaflet.TravelNotes
 * 
 * @licstart  The following is the entire license notice for the
 * JavaScript code in this page.
 * 
 * leaflet.travelnotes - version 2.2.0
 * Build 00828 - 2021-04-04T16:50:53+0200 
 * Copyright 2017 2021 wwwouaiebe 
 * Contact: https://www.ouaie.be/
 * License: GPL-3.0
 * 
 * The JavaScript code in this page is free software: you can
 * redistribute it and/or modify it under the terms of the GNU
 * General Public License (GNU GPL) as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option)
 * any later version.  The code is distributed WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.
 * 
 * As additional permission under GNU GPL version 3 section 7, you
 * may distribute non-source (e.g., minimized or compacted) forms of
 * that code without the copy of the GNU GPL normally required by
 * section 4, provided you include this license notice and a URL
 * through which recipients can access the Corresponding Source.
 * 
 * @licend  The above is the entire license notice
 * for the JavaScript code in this page.
 * 
 */


!function(){"use strict";
/**
	@------------------------------------------------------------------------------------------------------------------------------

	@file Constants.js
	@copyright Copyright - 2017 2021 - wwwouaiebe - Contact: https://www.ouaie.be/
	@license GNU General Public License
	@private

	@------------------------------------------------------------------------------------------------------------------------------
	*/Object.freeze({notSaved:"ðŸ”´",modified:"ðŸŸ¡",saved:"ðŸŸ¢"}),Object.freeze({fixed:2,invalid:-1,defaultValue:0,metersInKm:1e3}),Object.freeze({refusedByUser:-1,disabled:0,inactive:1,active:2}),Object.freeze({invalidPane:"43a6a53e-008a-4910-80a6-7a87d301ea15",itineraryPane:"8fbf0da7-4e6f-4bc7-8e20-1388461ccde7",travelNotesPane:"dffe782b-07df-4b81-a318-f287c0cf5ec6",searchPane:"228f00d7-43a8-4c13-897d-70400cb6dd58"}),Object.freeze({fixed:2,defaultValue:0}),Object.freeze({defaultValue:0,fixed:6,maxLat:90,minLat:-90,maxLng:180,minLng:-180}),Object.freeze({notEdited:0,editedNoChange:1,editedChanged:2}),Object.freeze({margin:100,height:500,width:1e3,yDeltaText:30,xDeltaText:10,vScales:[1,2,5,10,20,50,100,200,500,1e3,2e3,5e3],hScales:[1,2,5,10,20,50,100,200,500,1e3,2e3,5e3,1e4,2e4,5e4,1e5]}),Object.freeze({width:40,height:40,svgViewboxDim:200});const e=Object.freeze({d0:0,d90:90,d180:180,d270:270,d360:360,d540:540,toRadians:Math.PI/180,fromRadians:180/Math.PI});function t(t){return(t+e.d540)%e.d360-e.d180}const r=new class{constructor(){Object.freeze(this)}arcFromSummitArcArc(e,t,r){return Math.acos(Math.cos(t)*Math.cos(r)+Math.sin(t)*Math.sin(r)*Math.cos(e))}summitFromArcArcArc(e,t,r){return Math.acos((Math.cos(r)-Math.cos(e)*Math.cos(t))/(Math.sin(e)*Math.sin(t)))}pointsDistance(r,a){if(r[0]===a[0]&&r[1]===a[1])return 0;let n=r[0]*e.toRadians,i=a[0]*e.toRadians,o=(t(a[1])-t(r[1]))*e.toRadians;return 6371e3*Math.acos(Math.sin(n)*Math.sin(i)+Math.cos(n)*Math.cos(i)*Math.cos(o))}},a=Math.PI/2,n=Object.freeze({en:Object.freeze({kStart:"Start",kContinue:"Continue",kEnd:"Stop"}),fr:Object.freeze({kStart:"DÃ©part",kContinue:"Continuer",kEnd:"ArrivÃ©e"})}),i=Object.freeze({kStart:"kDepartDefault",kContinue:"kContinueStraight",kEnd:"kArriveDefault"});let o="fr",s=null;function d(e,t){let r=window.TaN.maneuver;r.iconName=i[t],r.instruction=n[o]?n[o][t]:n.en[t],r.duration=0,r.itineraryPointObjId=e,s.itinerary.maneuvers.add(r)}function c(e){let t=window.TaN.itineraryPoint;return t.latLng=e,s.itinerary.itineraryPoints.add(t),t.objId}function l(t,n){let i=[t.lat*e.toRadians,t.lng*e.toRadians],o=[n.lat*e.toRadians,n.lng*e.toRadians],d=(n.lng-t.lng+e.d360)%e.d360>e.d180?-1:1,c=r.arcFromSummitArcArc(o[1]-i[1],a-i[0],a-o[0]);if(.1>c*e.fromRadians)return;let l=r.summitFromArcArcArc(a-i[0],c,a-o[0]),u=[];for(let t=1;t<=64;t++){let n=c*t/64,o=r.arcFromSummitArcArc(l,a-i[0],n),s=r.summitFromArcArcArc(a-i[0],o,n),f=window.TaN.itineraryPoint;f.latLng=[(a-o)*e.fromRadians,(i[1]+d*s)*e.fromRadians],u.push(f)}n.lng=u.pop().lng,u.forEach(e=>s.itinerary.itineraryPoints.add(e))}function u(t,n){try{switch(s.itinerary.itineraryPoints.removeAll(),s.itinerary.maneuvers.removeAll(),s.itinerary.hasProfile=!1,s.itinerary.ascent=0,s.itinerary.descent=0,s.itinerary.transitMode){case"line":!function(){let t=s.wayPoints.iterator,r=null;for(;!t.done;)t.first?(r=t.value,d(c(t.value.latLng),"kStart")):(l(r,t.value),d(c(t.value.latLng),t.last?"kEnd":"kContinue"),r=t.value);let a=-Number.MAX_VALUE,n=s.itinerary.itineraryPoints.iterator;for(;!n.done;)a=Math.max(a,n.value.lng);let i=a%e.d360-a;for(n=s.itinerary.itineraryPoints.iterator;!n.done;)n.value.lng+=i;for(t=s.wayPoints.iterator;!t.done;)t.value.lng+=i}();break;case"circle":!function(){let t=[s.wayPoints.first.lat*e.toRadians,s.wayPoints.first.lng*e.toRadians],n=[s.wayPoints.last.lat*e.toRadians,s.wayPoints.last.lng*e.toRadians],i=r.arcFromSummitArcArc(t[1]-n[1],a-t[0],a-n[0]),o=[];for(let n=0;n<=360;n++){let s=Math.PI/720+Math.PI*n/360,c=r.arcFromSummitArcArc(s,i,a-t[0]),l=r.summitFromArcArcArc(a-t[0],c,i),u=window.TaN.itineraryPoint;u.latLng=[(a-c)*e.fromRadians,(t[1]+l)*e.fromRadians],o.push(u),u=window.TaN.itineraryPoint,u.latLng=[(a-c)*e.fromRadians,(t[1]-l)*e.fromRadians],o.unshift(u),360===n&&(d(u.objId,"kStart"),u=window.TaN.itineraryPoint,u.latLng=[(a-c)*e.fromRadians,(t[1]-l)*e.fromRadians],d(u.objId,"kEnd"),o.push(u))}o.forEach(e=>s.itinerary.itineraryPoints.add(e))}()}t(s)}catch(e){n(e)}}window.TaN.addProvider(new class{constructor(){Object.freeze(this)}getPromiseRoute(e){return function(e){return s=e,new Promise(u)}(e)}get icon(){return'data:image/svg+xml;utf8,<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg" > <circle cx="12" c\t\ty="12" r="3" stroke="rgb(0,0,0)" fill="transparent" /> <line x1="5" y1="17" x2="11" y2="2" stroke="rgb(0,0,0)" \t\t/> <line x1="3" y1="6" x2="17" y2="9" stroke="rgb(191,0,0)" /> <line x1="3" y1="16" x2="17" y2="5" stroke="rgb(\t\t255,204,0)" /> </svg>'}get name(){return"Polyline & Circle"}get transitModes(){return{line:!0,circle:!0}}get providerKeyNeeded(){return!1}get providerKey(){return 1}set providerKey(e){}get userLanguage(){return o}set userLanguage(e){o=e}})}();