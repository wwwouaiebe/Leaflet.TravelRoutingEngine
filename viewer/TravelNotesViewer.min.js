/**
 * 
 * @source: https://github.com/wwwouaiebe/leaflet.TravelNotes
 * 
 * @licstart  The following is the entire license notice for the
 * JavaScript code in this page.
 * 
 * leaflet.travelnotes - version 1.11.0
 * Build 00124 - 2020-07-10T17:51:44+0200 
 * Copyright 2017 2020 wwwouaiebe 
 * Contact: https://www.ouaie.be/
 * License: GPL-3.0
 * 
 * The JavaScript code in this page is free software: you can
 * redistribute it and/or modify it under the terms of the GNU
 * General Public License (GNU GPL) as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option)
 * any later version.  The code is distributed WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.
 * 
 * As additional permission under GNU GPL version 3 section 7, you
 * may distribute non-source (e.g., minimized or compacted) forms of
 * that code without the copy of the GNU GPL normally required by
 * section 4, provided you include this license notice and a URL
 * through which recipients can access the Corresponding Source.
 * 
 * @licend  The above is the entire license notice
 * for the JavaScript code in this page.
 * 
 */


!function(){"use strict";let e=function(){let e={autoLoad:!1,map:{center:{lat:50.50923,lng:5.49542},zoom:12},travelNotesToolbarUI:{contactMail:"https://github.com/wwwouaiebe/leaflet.TravelNotes/issues"},layersToolbarUI:{haveLayersToolbarUI:!0,toolbarTimeOut:1500,contactMail:"https://github.com/wwwouaiebe/leaflet.TravelNotes/issues",theDevil:{addButton:!1,title:"Reminder! The devil will know everything about you",text:"&#x1f47f;"}},mouseUI:{haveMouseUI:!0},errorUI:{timeOut:1e4,helpTimeOut:3e4,showError:!0,showWarning:!0,showInfo:!0,showHelp:!0},geoLocation:{color:"red",radius:11,zoomToPosition:!0,zoomFactor:17,options:{enableHighAccuracy:!1,maximumAge:0,timeout:1/0}},APIKeys:{showDialogButton:!0,saveToSessionStorage:!0,showAPIKeysInDialog:!0,dialogHaveUnsecureButtons:!0},contextMenu:{timeout:1500},routing:{auto:!0},language:"fr",itineraryPointMarker:{color:"red",weight:2,radius:7,fill:!1},searchPointMarker:{color:"green",weight:4,radius:20,fill:!1},searchPointPolyline:{color:"green",weight:4,radius:20,fill:!1},previousSearchLimit:{color:"green",fill:!1,weight:1},nextSearchLimit:{color:"red",fill:!1,weight:1},wayPoint:{reverseGeocoding:!1},route:{color:"#ff0000",width:3,dashArray:0,dashChoices:[{text:"——————",iDashArray:null},{text:"— — — — —",iDashArray:[4,2]},{text:"—‧—‧—‧—‧—",iDashArray:[4,2,0,2]},{text:"················",iDashArray:[0,2]}],elev:{smooth:!0,smoothCoefficient:.25,smoothPoints:3},showDragTooltip:3},note:{reverseGeocoding:!1,grip:{size:10,opacity:0},polyline:{color:"gray",weight:1},style:"",svgIconWidth:200,svgAnleMaxDirection:{right:35,slightRight:80,continue:100,slightLeft:145,left:200,sharpLeft:270,sharpRight:340},svgZoom:17,svgAngleDistance:10,svgHamletDistance:200,svgVillageDistance:400,svgCityDistance:1200,svgTownDistance:1500,svgTimeOut:15e3,cityPrefix:'<span class="TravelNotes-NoteHtml-Address-City">',cityPostfix:"</span>",maxManeuversNotes:100},itineraryPointZoom:17,routeEditor:{displayEditionInHTMLPage:!0},travelEditor:{clearAfterSave:!0,startMinimized:!0,timeout:1e3,startupRouteEdition:!0},haveBeforeUnloadWarning:!0,overpassApiUrl:"https://lz4.overpass-api.de/api/interpreter",nominatim:{url:"https://nominatim.openstreetmap.org/",language:"*"},printRouteMap:{isEnabled:!0,maxTiles:240,paperWidth:287,paperHeight:200,pageBreak:!1,printNotes:!0,borderWidth:30,zoomFactor:15,entryPointMarker:{color:"green",weight:4,radius:10,fill:!0,fillOpacity:1},exitPointMarker:{color:"red",weight:4,radius:10,fill:!0,fillOpacity:1}},haveCrypto:!1};function t(t){!function e(t,o){if("object"==typeof t&&"object"==typeof o)try{for(let r in o)"object"==typeof o[r]?e(t[r],o[r]):o[r]=t[r]||o[r];for(let r in t)"object"==typeof t[r]?("[object Array]"===Object.prototype.toString.call(t[r])?o[r]=o[r]||[]:o[r]=o[r]||{},e(t[r],o[r])):o[r]=t[r]}catch(e){console.log(e||"Not possible to overload Config")}}(t,e),e=function e(t){for(let o in t)"object"==typeof t[o]&&(t[o]=e(t[o]));return Object.freeze(t)}(e)}return{get autoLoad(){return e.autoLoad},get map(){return e.map},get travelNotesToolbarUI(){return e.travelNotesToolbarUI},get layersToolbarUI(){return e.layersToolbarUI},get mouseUI(){return e.mouseUI},get errorUI(){return e.errorUI},get APIKeys(){return e.APIKeys},get contextMenu(){return e.contextMenu},get routing(){return e.routing},get language(){return e.language},get itineraryPointMarker(){return e.itineraryPointMarker},get searchPointMarker(){return e.searchPointMarker},get searchPointPolyline(){return e.searchPointPolyline},get previousSearchLimit(){return e.previousSearchLimit},get nextSearchLimit(){return e.nextSearchLimit},get wayPoint(){return e.wayPoint},get route(){return e.route},get note(){return e.note},get itineraryPointZoom(){return e.itineraryPointZoom},get routeEditor(){return e.routeEditor},get travelEditor(){return e.travelEditor},get haveBeforeUnloadWarning(){return e.haveBeforeUnloadWarning},get overpassApiUrl(){return e.overpassApiUrl},get nominatim(){return e.nominatim},get geoLocation(){return e.geoLocation},get printRouteMap(){return e.printRouteMap},get haveCrypto(){return e.haveCrypto},overload:e=>t(e)}}();function t(){return Object.seal({create:(e,t,o)=>function(e,t,o){let r=null;if(r="text"===e.toLowerCase()?document.createTextNode(""):document.createElement(e),o&&o.appendChild(r),t)for(let e in t)try{r[e]=t[e]}catch(t){console.log("Invalid property : "+e)}return r}(e,t,o)})}function o(){return{getJsonPromise:(e,t)=>function(e,t){return new Promise((function(o,r){let n=new XMLHttpRequest;n.timeout=2e4,n.ontimeout=function(){r("XMLHttpRequest TimeOut. File : "+n.responseURL)},n.onreadystatechange=function(){if(4===n.readyState)if(200===n.status){let e=null;try{e=JSON.parse(n.responseText)}catch(e){r(e.message+" File: "+n.responseURL)}o(e)}else r("Error XMLHttpRequest - File : "+n.responseURL)},n.open("GET",e,!0),t&&t.forEach(e=>n.setRequestHeader(e.headerName,e.headerValue)),n.overrideMimeType("application/json"),n.send(null)}))}(e,t),getBinaryPromise:(e,t)=>function(e,t){return new Promise((function(o,r){let n=new XMLHttpRequest;n.timeout=2e4,n.ontimeout=function(){r("XMLHttpRequest TimeOut. File : "+n.responseURL)},n.onload=function(){if(200===n.status){let e=n.response;e?o(e):r("Error XMLHttpRequest - File : "+n.responseURL)}else r("Error XMLHttpRequest - File : "+n.responseURL)},n.open("GET",e,!0),t&&t.forEach(e=>n.setRequestHeader(e.headerName,e.headerValue)),n.responseType="arraybuffer",n.send(null)}))}(e,t)}}const r=Object.freeze({fixed:2,invalid:-1,defaultValue:0}),n=Object.freeze({refusedByUser:-1,disabled:0,inactive:1,active:2}),a=Object.freeze({fixed:2,defaultValue:0}),i=Object.freeze({defaultValue:0,fixed:6}),l=Object.freeze({notEdited:0,editedNoChange:1,editedChanged:2}),s=Object.freeze({margin:100,height:500,width:1e3,yDeltaText:30,xDeltaText:10,vScales:[1,2,5,10,20,50,100,200,500,1e3,2e3,5e3],hScales:[1,2,5,10,20,50,100,200,500,1e3,2e3,5e3,1e4,2e4,5e4,1e5]});Object.freeze({width:40,height:40});let d=0;function c(){return++d,d}function u(e){const t=e;return Object.seal({get name(){return t},get version(){return"1.11.0"},get object(){return{name:t,version:"1.11.0"}},validate:e=>function(e){if(!Object.getOwnPropertyNames(e).includes("name"))throw new Error("No name for "+t);if(t!==e.name)throw new Error("Invalid name for "+t);if(!Object.getOwnPropertyNames(e).includes("version"))throw new Error("No version for "+t)}(e)})}function g(e){const t=e().objType.name,o=e;let r=[];function n(e){if(!e.objType||!e.objType.name||e.objType.name!==t)throw new Error("invalid object name for add function");r.push(e)}function a(){let e=-1;return{get value(){return e<r.length?r[e]:null},get previous(){return 0>=e?null:r[e-1]},get next(){return e<r.length-1?r[e+1]:null},get done(){return++e>=r.length},get first(){return 0===e},get last(){return e>=r.length-1},get index(){return e}}}function i(e){return r.findIndex(t=>t.objId===e)}function l(e,t,o){let n=i(e);if(-1===n)throw new Error("invalid objId for next or previous function");let a=t;for(a||(a=()=>!0),n+=o;-1<n&&n<r.length&&!a(r[n]);)n+=o;return-1===n||r.length===n?null:r[n]}return Object.seal({add:e=>n(e),forEach:e=>function(e){let t=null,o=a();for(;!o.done;)t=e(o.value,t);return t}(e),getAt:e=>function(e){let t=i(e);return-1===t?null:r[t]}(e),moveTo:(e,t,o)=>function(e,t,o){let n=i(e),a=i(t);o||a++,r.splice(a,0,r[n]),a<n&&n++,r.splice(n,1)}(e,t,o),next:(e,t)=>l(e,t,1),previous:(e,t)=>l(e,t,-1),remove:e=>function(e){if(-1===i(e))throw new Error("invalid objId for remove function");r.splice(i(e),1)}(e),removeAll:e=>{e?r.splice(1,r.length-2):r.length=0},replace:(e,t)=>function(e,t){let o=i(e);if(-1===o)throw new Error("invalid objId for replace function");r[o]=t}(e,t),reverse:()=>{r.reverse()},sort:e=>function(e){r.sort(e)}(e),swap:(e,t)=>function(e,t){let o=i(e);if(-1===o||0===o&&t||r.length-1===o&&!t)throw new Error("invalid objId for swap function");let n=r[o];r[o]=r[o+(t?-1:1)],r[o+(t?-1:1)]=n}(e,t),get first(){return r[0]},get iterator(){return a()},get last(){return r[r.length-1]},get length(){return r.length},get object(){return function(){let e=[],t=a();for(;!t.done;)e.push(t.value.object);return e}()},set object(e){!function(e){r.length=0;let t=null;e.forEach(e=>{t=o(),t.object=e,n(t)})}(e)}})}const f=u("WayPoint");function p(){let e="",t=i.defaultValue,o=i.defaultValue,r=c();function n(n){let a=function(e){if(!Object.getOwnPropertyNames(e).includes("objType"))throw new Error("No objType for "+f.name);if(f.validate(e.objType),f.version!==e.objType.version)switch(e.objType.version){case"1.0.0":case"1.1.0":case"1.2.0":case"1.3.0":case"1.4.0":case"1.5.0":case"1.6.0":case"1.7.0":case"1.7.1":case"1.8.0":case"1.9.0":case"1.10.0":e.objType.version="1.11.0";break;default:throw new Error("invalid version for "+f.name)}let t=Object.getOwnPropertyNames(e);return["name","lat","lng","objId"].forEach(e=>{if(!t.includes(e))throw new Error("No "+e+" for "+f.name)}),e}(n);e=a.name||"",t=a.lat||i.defaultValue,o=a.lng||i.defaultValue,r=c()}return Object.seal({get name(){return e},set name(t){e=t},get lat(){return t},set lat(e){t=e},get lng(){return o},set lng(e){o=e},get latLng(){return[t,o]},set latLng(e){t=e[0],o=e[1]},get objId(){return r},get objType(){return f},get object(){return{name:e,lat:parseFloat(t.toFixed(i.fixed)),lng:parseFloat(o.toFixed(i.fixed)),objId:r,objType:f.object}},set object(e){n(e)}})}const v=u("ItineraryPoint");function h(){let e=i.defaultValue,t=i.defaultValue,o=r.defaultValue,n=a.defaultValue,l=c();function s(s){let d=function(e){if(!Object.getOwnPropertyNames(e).includes("objType"))throw new Error("No objType for "+v.name);if(v.validate(e.objType),v.version!==e.objType.version)switch(e.objType.version){case"1.0.0":case"1.1.0":case"1.2.0":case"1.3.0":case"1.4.0":case"1.5.0":case"1.6.0":e.elev=a.defaultValue;case"1.7.0":case"1.7.1":case"1.8.0":case"1.9.0":case"1.10.0":e.objType.version="1.11.0";break;default:throw new Error("invalid version for "+v.name)}let t=Object.getOwnPropertyNames(e);return["lat","lng","distance","elev","objId"].forEach(e=>{if(!t.includes(e))throw new Error("No "+e+" for "+v.name)}),e}(s);e=d.lat||i.defaultValue,t=d.lng||i.defaultValue,o=d.distance||r.defaultValue,n=d.elev||a.defaultValue,l=c()}return Object.seal({get lat(){return e},set lat(t){e=t},get lng(){return t},set lng(e){t=e},get latLng(){return[e,t]},set latLng(o){e=o[0],t=o[1]},get distance(){return o},set distance(e){o=e},get elev(){return n},set elev(e){n=e},get objId(){return l},get objType(){return v},get object(){return{lat:parseFloat(e.toFixed(i.fixed)),lng:parseFloat(t.toFixed(i.fixed)),distance:parseFloat(o.toFixed(r.fixed)),elev:parseFloat(n.toFixed(a.fixed)),objId:l,objType:v.object}},set object(e){s(e)}})}const m=u("Maneuver");function b(){let e=c(),t="",o="",n=-1,a=r.defaultValue,i=r.defaultValue;function l(l){let s=function(e){if(!Object.getOwnPropertyNames(e).includes("objType"))throw new Error("No objType for "+m.name);if(m.validate(e.objType),m.version!==e.objType.version)switch(e.objType.version){case"1.0.0":case"1.1.0":case"1.2.0":case"1.3.0":case"1.4.0":case"1.5.0":case"1.6.0":case"1.7.0":case"1.7.1":case"1.8.0":case"1.9.0":case"1.10.0":e.objType.version="1.11.0";break;default:throw new Error("invalid version for "+m.name)}let t=Object.getOwnPropertyNames(e);return["iconName","instruction","distance","duration","itineraryPointObjId","objId"].forEach(e=>{if(!t.includes(e))throw new Error("No "+e+" for "+m.name)}),e}(l);t=s.iconName||"",o=s.instruction||"",a=s.distance||r.defaultValue,i=s.duration||r.defaultValue,n=s.itineraryPointObjId||-1,e=c()}return Object.seal({get iconName(){return t},set iconName(e){t=e},get instruction(){return o},set instruction(e){o=e},get itineraryPointObjId(){return n},set itineraryPointObjId(e){n=e},get distance(){return a},set distance(e){a=e},get duration(){return i},set duration(e){i=e},get objId(){return e},get objType(){return m},get object(){return{iconName:t,instruction:o,distance:parseFloat(a.toFixed(r.fixed)),duration:i,itineraryPointObjId:n,objId:e,objType:m.object}},set object(e){l(e)}})}const y=u("Itinerary");function j(){let e=!1,t=0,o=0,r="",n="",a=g(h),i=g(b),l=c();function s(s){let d=function(e){if(!Object.getOwnPropertyNames(e).includes("objType"))throw new Error("No objType for "+y.name);if(y.validate(e.objType),y.version!==e.objType.version)switch(e.objType.version){case"1.0.0":case"1.1.0":case"1.2.0":case"1.3.0":case"1.4.0":case"1.5.0":case"1.6.0":e.hasProfile=!1,e.ascent=0,e.descent=0;case"1.7.0":case"1.7.1":case"1.8.0":case"1.9.0":case"1.10.0":e.objType.version="1.11.0";break;default:throw new Error("invalid version for "+y.name)}let t=Object.getOwnPropertyNames(e);return["hasProfile","ascent","descent","itineraryPoints","maneuvers","provider","transitMode","objId"].forEach(e=>{if(!t.includes(e))throw new Error("No "+e+" for "+y.name)}),e}(s);e=d.hasProfile||!1,t=d.ascent||0,o=d.descent||0,a.object=d.itineraryPoints||[],i.object=d.maneuvers||[],r=d.provider||"",n=d.transitMode||"",l=c();let u=new Map,g=0,f=a.iterator;for(;!f.done;)u.set(d.itineraryPoints[g].objId,f.value.objId),g++;let p=i.iterator;for(;!p.done;)p.value.itineraryPointObjId=u.get(p.value.itineraryPointObjId)}return Object.seal({get hasProfile(){return e},set hasProfile(t){e=t},get ascent(){return t},set ascent(e){t=e},get descent(){return o},set descent(e){o=e},get itineraryPoints(){return a},get maneuvers(){return i},get provider(){return r},set provider(e){r=e},get transitMode(){return n},set transitMode(e){n=e},get objId(){return l},get objType(){return y},get object(){return{hasProfile:e,ascent:t,descent:o,itineraryPoints:a.object,maneuvers:i.object,provider:r,transitMode:n,objId:l,objType:y.object}},set object(e){s(e)}})}const w=u("Note");function T(){let e=c(),t=0,o=0,n="",a="",l="",s="",d="",u="",g=i.defaultValue,f=i.defaultValue,p=i.defaultValue,v=i.defaultValue,h=r.invalid,m=r.defaultValue;function b(b){let y=function(e){if(!Object.getOwnPropertyNames(e).includes("objType"))throw new Error("No objType for "+w.name);if(w.validate(e.objType),w.version!==e.objType.version)switch(e.objType.version){case"1.0.0":case"1.1.0":case"1.2.0":case"1.3.0":case"1.4.0":case"1.5.0":case"1.6.0":case"1.7.0":case"1.7.1":case"1.8.0":case"1.9.0":case"1.10.0":e.objType.version="1.11.0";break;default:throw new Error("invalid version for "+w.name)}let t=Object.getOwnPropertyNames(e);return["iconHeight","iconWidth","iconContent","popupContent","tooltipContent","phone","url","address","iconLat","iconLng","lat","lng","distance","chainedDistance","objId"].forEach(e=>{if(!t.includes(e))throw new Error("No "+e+" for "+w.name)}),e}(b);t=y.iconHeight||0,o=y.iconWidth||0,n=y.iconContent||"",a=y.popupContent||"",l=y.tooltipContent||"",s=y.phone||"",d=y.url||"",u=y.address||"",g=y.iconLat||i.defaultValue,f=y.iconLng||i.defaultValue,p=y.lat||i.defaultValue,v=y.lng||i.defaultValue,h=y.distance||r.invalid,m=y.chainedDistance,e=c()}return Object.seal({get isRouteNote(){return h!==r.invalid},get iconHeight(){return t},set iconHeight(e){t=e},get iconWidth(){return o},set iconWidth(e){o=e},get iconContent(){return n},set iconContent(e){n=e},get popupContent(){return a},set popupContent(e){a=e},get tooltipContent(){return l},set tooltipContent(e){l=e},get phone(){return s},set phone(e){s=e},get url(){return d},set url(e){d=e},get address(){return u},set address(e){u=e},get iconLat(){return g},set iconLat(e){g=e},get iconLng(){return f},set iconLng(e){f=e},get iconLatLng(){return[g,f]},set iconLatLng(e){g=e[0],f=e[1]},get lat(){return p},set lat(e){p=e},get lng(){return v},set lng(e){v=e},get latLng(){return[p,v]},set latLng(e){p=e[0],v=e[1]},get distance(){return h},set distance(e){h=e},get chainedDistance(){return m},set chainedDistance(e){m=e},get objId(){return e},get objType(){return w},get object(){return{iconHeight:t,iconWidth:o,iconContent:n,popupContent:a,tooltipContent:l,phone:s,url:d,address:u,iconLat:parseFloat(g.toFixed(i.fixed)),iconLng:parseFloat(f.toFixed(i.fixed)),lat:parseFloat(p.toFixed(i.fixed)),lng:parseFloat(v.toFixed(i.fixed)),distance:parseFloat(h.toFixed(r.fixed)),chainedDistance:parseFloat(m.toFixed(r.fixed)),objId:e,objType:w.object}},set object(e){b(e)}})}const N=u("Route");function I(){let t="",o=g(p);o.add(p()),o.add(p());let n=g(T),a=j(),i=e.route.width,s=e.route.color,d=e.route.dashArray,u=!1,f=r.defaultValue,v=r.defaultValue,h=r.defaultValue,m=l.notEdited;let b=!1,y=c();function w(r){let g=function(e){if(!Object.getOwnPropertyNames(e).includes("objType"))throw new Error("No objType for "+N.name);if(N.validate(e.objType),N.version!==e.objType.version)switch(e.objType.version){case"1.0.0":e.dashArray=0,e.hidden=!1;case"1.1.0":case"1.2.0":case"1.3.0":case"1.4.0":e.edited=l.notEdited;case"1.5.0":case"1.6.0":case"1.7.0":case"1.7.1":case"1.8.0":case"1.9.0":case"1.10.0":e.objType.version="1.11.0";break;default:throw new Error("invalid version for "+N.name)}let t=Object.getOwnPropertyNames(e);return["name","wayPoints","notes","itinerary","width","color","dashArray","chain","distance","duration","edited","hidden","chainedDistance","objId"].forEach(e=>{if(!t.includes(e))throw new Error("No "+e+" for "+N.name)}),e}(r);t=g.name||"",o.object=g.wayPoints||[],n.object=g.notes||[],a.object=g.itinerary||j().object,i=g.width||e.route.width,s=g.color||"#000000",d=g.dashArray||0,u=g.chain||!1,v=g.distance,h=g.duration,m=g.edited||l.notEdited,b=g.hidden||!1,f=g.chainedDistance,y=c()}return Object.seal({get wayPoints(){return o},get itinerary(){return a},get notes(){return n},get name(){return t},set name(e){t=e},get width(){return i},set width(e){i=e},get color(){return s},set color(e){s=e},get dashArray(){return d},set dashArray(e){d=e},get chain(){return u},set chain(e){u=e},get chainedDistance(){return f},set chainedDistance(e){f=e},get distance(){return v},set distance(e){v=e},get duration(){return h},set duration(e){h=e},get edited(){return m},set edited(e){!function(e){if("number"!=typeof e||l.notEdited>e||l.editedChanged<e)throw new Error("Invalid value for Route.edited : "+e);m=e}(e)},get hidden(){return b},set hidden(e){b=e},get objId(){return y},get objType(){return N},get object(){return{name:t,wayPoints:o.object,notes:n.object,itinerary:a.object,width:i,color:s,dashArray:d,chain:u,distance:parseFloat(v.toFixed(r.fixed)),duration:h,edited:m,hidden:b,chainedDistance:parseFloat(f.toFixed(r.fixed)),objId:y,objType:N.object}},set object(e){w(e)}})}const M=u("Travel");function x(){let e=I(),t="OSM - Color",o="TravelNotes",r=g(I),n=g(T),a=c(),i=!1,l={};function s(s){let d=function(e){if(!Object.getOwnPropertyNames(e).includes("objType"))throw new Error("No objType for "+M.name);if(M.validate(e.objType),M.version!==e.objType.version)switch(e.objType.version){case"1.0.0":case"1.1.0":case"1.2.0":case"1.3.0":case"1.4.0":e.editedRoute=I();case"1.5.0":if(e.userData.layerId){let t=[{layerId:"0",layerName:"OSM - Color"},{layerId:"1",layerName:"OSM - Black and White"},{layerId:"2",layerName:"Thunderforest - Transport"},{layerId:"3",layerName:"Thunderforest - OpenCycleMap"},{layerId:"4",layerName:"Thunderforest - Outdoors"},{layerId:"5",layerName:"Esri - Aerial view"},{layerId:"6",layerName:"Kartverket - Norway"},{layerId:"7",layerName:"IGN-NGI - Belgium now"},{layerId:"12",layerName:"Thunderforest - Landscape"},{layerId:"24",layerName:"Lantmäteriet - Sweden"},{layerId:"25",layerName:"Maanmittauslaitos - Finland"}].find(t=>t.layerId===e.userData.layerId);e.layerName=t?t.layerName:"OSM - Color"}else e.layerName="OSM - Color";case"1.6.0":case"1.7.0":case"1.7.1":case"1.8.0":case"1.9.0":case"1.10.0":e.objType.version="1.11.0";break;default:throw new Error("invalid version for "+M.name)}let t=Object.getOwnPropertyNames(e);return["name","editedRoute","routes","userData","objId"].forEach(e=>{if(!t.includes(e))throw new Error("No "+e+" for "+M.name)}),e}(s);e.object=d.editedRoute,t=s.layerName||"OSM - Color",o=d.name||"",l=d.userData||{},i=d.readOnly||!1,r.object=d.routes||[],n.object=d.notes||[],a=c()}return Object.seal({get editedRoute(){return e},set editedRoute(t){e=t},get routes(){return r},get notes(){return n},get layerName(){return t},set layerName(e){t=e},get name(){return o},set name(e){o=e},get readOnly(){return i},set readOnly(e){i=e},get userData(){return l},set userData(e){l=e},get objId(){return a},get objType(){return M},get object(){return{editedRoute:e.object,layerName:t,name:o,routes:r.object,notes:n.object,userData:l,readOnly:i,objId:a,objType:M.object}},set object(e){s(e)}})}const O=function(){let e=new Map;return{setTranslations:t=>function(t){t.forEach(t=>e.set(t.msgid,t.msgstr))}(t),getText:(t,o)=>function(t,o){let r=e.get(t);return o&&r&&Object.getOwnPropertyNames(o).forEach(e=>r=r.replace("{"+e+"}",o[e])),r||t}(t,o)}}();function P(){function e(e){return e>0?e.toFixed(i.fixed)+" N":(-e).toFixed(i.fixed)+" S"}function t(e){return e>0?e.toFixed(i.fixed)+" E":(-e).toFixed(i.fixed)+" W"}return Object.seal({get UUID(){return function(){function e(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return e()+e()+"-"+e()+"-"+e()+"-"+e()+"-"+e()+e()+e()}()},storageAvailable:e=>function(e){try{let t=window[e],o="__storage_test__";return t.setItem(o,o),t.removeItem(o),!0}catch(e){return!1}}(e),fileAPIAvailable:()=>function(){try{return new File(["testdata"],{type:"text/plain"}),!0}catch(e){return!!window.navigator.msSaveOrOpenBlob}}(),saveFile:(e,t,o)=>function(e,t,o){if(window.navigator.msSaveOrOpenBlob)try{window.navigator.msSaveOrOpenBlob(new Blob([t]),e)}catch(e){console.log(e||"An error occurs when saving file")}else try{let r=window.URL.createObjectURL(new File([t],{type:o||"text/plain"})),n=document.createElement("a");n.setAttribute("href",r),n.setAttribute("download",e),n.style.display="none",document.body.appendChild(n),n.click(),document.body.removeChild(n),window.URL.revokeObjectURL(r)}catch(e){console.log(e||"An error occurs when saving file")}}(e,t,o),formatTime:e=>function(e){let t=Math.floor(e);if(0===t)return"";let o=Math.floor(t/86400),r=Math.floor(t%86400/3600),n=Math.floor(t%3600/60),a=Math.floor(t%60);return 0<o?o+" "+O.getText("Utilities - Day")+" "+r+" "+O.getText("Utilities - Hour"):0<r?r+" "+O.getText("Utilities - Hour")+" "+n+" "+O.getText("Utilities - Minute"):0<n?n+" "+O.getText("Utilities - Minute"):a+" "+O.getText("Utilities - Second")}(e),formatDistance:e=>function(e){let t=Math.floor(e);return 0>=t?"0 km":Math.floor(t/1e3)+","+Math.floor(t%1e3/10).toFixed(0).padStart(2,"0").padEnd(3,"0")+" km"}(e),formatLat:t=>e(t),formatLng:e=>t(e),formatLatLng:o=>function(o){return 0===o[0]&&0===o[1]?"":e(o[0])+" - "+t(o[1])}(o)})}const E=function(){let e={map:null,providers:new Map,mapObjects:new Map,travel:x(),editedRouteObjId:-1,routing:Object.seal({provider:"",transitMode:""}),searchData:[],UUID:P().UUID};return Object.seal({get map(){return e.map},set map(t){e.map=t},get providers(){return e.providers},get mapObjects(){return e.mapObjects},get travel(){return e.travel},set travel(t){e.travel=t},get editedRouteObjId(){return e.editedRouteObjId},set editedRouteObjId(t){e.editedRouteObjId=t},get routeEdition(){return e.routeEdition},get routing(){return e.routing},get searchData(){return e.searchData},set searchData(t){e.searchData=t},get UUID(){return e.UUID}})}();function A(){return Object.seal({getRoute:e=>function(e){let t=null;return t=E.travel.routes.getAt(e),t||e===E.travel.editedRoute.objId&&(t=E.travel.editedRoute),t}(e),getNoteAndRoute:e=>function(e){let t=null;if(t=E.travel.notes.getAt(e),t)return{note:t,route:null};let o=E.travel.routes.iterator;for(;!o.done;)if(t=o.value.notes.getAt(e),t)return{note:t,route:o.value};return t=E.travel.editedRoute.notes.getAt(e),t?{note:t,route:E.travel.editedRoute}:{note:null,route:null}}(e),getWayPoint:e=>function(e){let t=null,o=E.travel.routes.iterator;for(;!o.done;)if(t=o.value.wayPoints.getAt(e),t)return t;return t=E.travel.editedRoute.wayPoints.getAt(e),t||null}(e)})}function R(){function e(e){return(e+540)%360-180}return Object.seal({getLatLngElevAtDist:(e,t)=>function(e,t){if(e.distance<=t||0>=t)return null;let o=0,r=e.itinerary.itineraryPoints.iterator;for(;o<t&&!r.done;)o+=r.value.distance;let n=r.value;r.done;let a=(n.distance-o+t)/n.distance;return[n.lat+(r.value.lat-n.lat)*a,n.lng+(r.value.lng-n.lng)*a,n.elev+(r.value.elev-n.elev)*a,100*(r.value.elev-n.elev)/n.distance]}(e,t),getClosestLatLngDistance:(e,t)=>function(e,t){if(0===e.itinerary.itineraryPoints.length)return null;let o=e.itinerary.itineraryPoints.iterator;o.done;let n=Number.MAX_VALUE,a=L.Projection.SphericalMercator.project(L.latLng(t[0],t[1])),i=L.Projection.SphericalMercator.project(L.latLng(o.value.lat,o.value.lng)),l=null,s=r.defaultValue,d=o.value.distance;for(;!o.done;){let e=L.Projection.SphericalMercator.project(L.latLng(o.value.lat,o.value.lng)),t=L.LineUtil.pointToSegmentDistance(a,i,e);t<n&&(n=t,l=L.Projection.SphericalMercator.unproject(L.LineUtil.closestPointOnSegment(a,i,e)),s=d-l.distanceTo(L.latLng(o.value.lat,o.value.lng))),d+=o.value.distance,i=e}return{latLng:[l.lat,l.lng],distance:s}}(e,t),getLatLngBounds:e=>function(e){let t=L.latLng([90,180]),o=L.latLng([-90,-180]);return e.forEach(e=>{t.lat=Math.min(t.lat,e[0]),t.lng=Math.min(t.lng,e[1]),o.lat=Math.max(o.lat,e[0]),o.lng=Math.max(o.lng,e[1])}),L.latLngBounds(t,o)}(e),pointsDistance:(t,o)=>function(t,o){if(t[0]===o[0]&&t[1]===o[1])return 0;const r=Math.PI/180;let n=t[0]*r,a=o[0]*r,i=(e(o[1])-e(t[1]))*r;return 6371e3*Math.acos(Math.sin(n)*Math.sin(a)+Math.cos(n)*Math.cos(a)*Math.cos(i))}(t,o),project:(e,t)=>function(e,t){let o=E.map.project(L.latLng(e),t);return[o.x,o.y]}(e,t),screenCoordToLatLng:(e,t)=>function(e,t){let o=E.map.containerPointToLatLng(L.point(e,t));return[o.lat,o.lng]}(e,t),addPoints:(e,t)=>function(e,t){return[e[0]+t[0],e[1]+t[1]]}(e,t),subtrackPoints:(e,t)=>function(e,t){return[e[0]-t[0],e[1]-t[1]]}(e,t)})}function C(){let t=null,o=1,r=1,n=Number.MAX_VALUE,a=0,i=0,l=null,d=0,c=e.route.elev.smoothCoefficient,u=e.route.elev.smoothPoints;function g(){let e=function(){let e=0,t=0,o=[],r=l.itinerary.itineraryPoints.iterator,n=0,a=r.done;for(o.push({distance:e,elev:r.value.elev}),n+=r.value.distance,a=r.done;!a;){for(e+=d;e>=n&&!a;)n+=r.value.distance,a=r.done;if(!a){let a=(r.value.elev-r.previous.elev)/r.previous.distance;t=r.value.elev-(n-e)*a,o.push({distance:e,elev:t})}}return o.push({distance:n,elev:l.itinerary.itineraryPoints.last.elev}),o}(),t=new Map,o=(e[u].elev-e[0].elev)/u,r=0;for(r=0;r<u;r++)t.set(r*d,{distance:r*d,elev:e[0].elev+o*r});for(r=u;r<e.length-u;r++){let o=0;for(let t=r-u;r+u>=t;t++)o+=e[t].elev;t.set(e[r].distance,{distance:e[r].distance,elev:o/(2*u+1)})}return r--,o=d*(e[e.length-1].elev-e[e.length-1-u].elev)/(e[e.length-1].distance-e[e.length-1-u].distance),t.set(e[r].distance+d,{distance:e[r].distance+d,elev:e[r].elev+o}),t.set(e[r].distance+2*d,{distance:e[r].distance+2*d,elev:e[r].elev+2*o}),t}function f(e){return l=e,n=Number.MAX_VALUE,a=0,l.itinerary.itineraryPoints.forEach(e=>{a=Math.max(a,e.elev),n=Math.min(n,e.elev)}),i=a-n,o=s.height/i,r=s.width/l.distance,t=document.createElementNS("http://www.w3.org/2000/svg","svg"),t.setAttributeNS(null,"viewBox","0 0 "+(s.width+2*s.margin)+" "+(s.height+2*s.margin)),t.setAttributeNS(null,"class","TravelNotes-SvgProfile"),function(){let e="",n=0,i=0,d=0;l.itinerary.itineraryPoints.forEach(t=>{i=(s.margin+r*n).toFixed(0),d=(s.margin+o*(a-t.elev)).toFixed(0),e+=i+","+d+" ",n+=t.distance});let c=document.createElementNS("http://www.w3.org/2000/svg","polyline");c.setAttributeNS(null,"points",e),c.setAttributeNS(null,"class","TravelNotes-SvgProfile-profilePolyline"),t.appendChild(c)}(),function(){const e=s.margin.toFixed(0),o=(s.margin+s.height).toFixed(0),r=(s.margin+s.width).toFixed(0),n=s.margin.toFixed(0);let a=e+","+n+" "+e+","+o+" "+r+","+o+" "+r+","+n,i=document.createElementNS("http://www.w3.org/2000/svg","polyline");i.setAttributeNS(null,"points",a),i.setAttributeNS(null,"class","TravelNotes-SvgProfile-framePolyline"),t.appendChild(i)}(),function(){let e=Number.MAX_VALUE,r=0;s.vScales.forEach(t=>{let o=Math.abs(i/4-t);o<e&&(e=o,r=t)});let l=Math.ceil(n/r)*r;const d=(s.margin+s.width+s.xDeltaText).toFixed(0),c=(s.margin-s.xDeltaText).toFixed(0);for(;l<a;){let e=s.margin+(a-l)*o,n=document.createElementNS("http://www.w3.org/2000/svg","text");n.appendChild(document.createTextNode(l.toFixed(0))),n.setAttributeNS(null,"class","TravelNotes-SvgProfile-elevLegend"),n.setAttributeNS(null,"x",d),n.setAttributeNS(null,"y",e),n.setAttributeNS(null,"text-anchor","start"),t.appendChild(n);let i=document.createElementNS("http://www.w3.org/2000/svg","text");i.appendChild(document.createTextNode(l.toFixed(0))),i.setAttributeNS(null,"class","TravelNotes-SvgProfile-elevLegend"),i.setAttributeNS(null,"x",c),i.setAttributeNS(null,"y",e),i.setAttributeNS(null,"text-anchor","end"),t.appendChild(i),l+=r}}(),function(){const e=s.margin+s.height+s.margin/2;let o=Number.MAX_VALUE,n=0;s.hScales.forEach(e=>{let t=Math.abs(l.distance/8-e);t<o&&(o=t,n=e)});let a=Math.ceil(l.chainedDistance/n)*n;for(;a<l.distance+l.chainedDistance;){let o=document.createElementNS("http://www.w3.org/2000/svg","text");o.appendChild(document.createTextNode(1e3<n||0<l.chainedDistance?a/1e3+" km":a+" m ")),o.setAttributeNS(null,"class","TravelNotes-SvgProfile-distLegend"),o.setAttributeNS(null,"x",s.margin+(a-l.chainedDistance)*r),o.setAttributeNS(null,"y",e),o.setAttributeNS(null,"text-anchor","start"),t.appendChild(o),a+=n}}(),t}return Object.seal({smooth:e=>function(e){l=e;let t=l.itinerary.itineraryPoints.iterator,o=0,r=0;for(;!t.done;)o+=t.value.distance,r+=t.next?Math.abs(t.value.elev-t.next.elev):0;if(d=10*Math.floor(c/(r/o)),o<=2*u*d)return;let n=g();t=l.itinerary.itineraryPoints.iterator,t.done;let a=t.value.distance;for(;!t.done;){let e=n.get(Math.floor(a/d)*d),o=n.get(Math.ceil(a/d)*d);if(e&&o){let r=a-e.distance,n=(o.elev-e.elev)/(o.distance-e.distance);t.value.elev=e.elev+r*n}a+=t.value.distance}}(e),createSvg:e=>f(e)})}function S(o){let n=t(),a=P(),i=C(),l=e.note.svgIconWidth,s=o||"TravelNotes-Control-";function d(e){let t="";0!==e.tooltipContent.length&&(t+='<div class="'+s+'NoteHtml-TooltipContent">'+e.tooltipContent+"</div>"),0!==e.popupContent.length&&(t+='<div class="'+s+'NoteHtml-PopupContent">'+e.popupContent+"</div>"),0!==e.address.length&&(t+='<div class="'+s+'NoteHtml-Address">'+O.getText("NoteEditor - Address")+e.address+"</div>"),0!==e.phone.length&&(t+='<div class="'+s+'NoteHtml-Phone">'+O.getText("NoteEditor - Phone")+e.phone+"</div>"),0!==e.url.length&&(t+='<div class="'+s+'NoteHtml-Url">'+O.getText("NoteEditor - Link")+'<a href="'+e.url+'" target="_blank">'+e.url.substr(0,40)+"...</a></div>");let o=P();return t+='<div class="'+s+'NoteHtml-LatLng">'+O.getText("NoteEditor - Latitude Longitude",{lat:o.formatLat(e.lat),lng:o.formatLng(e.lng)})+"</div>",r.invalid!==e.distance&&(t+='<div class="'+s+'NoteHtml-Distance">'+O.getText("NoteEditor - Distance",{distance:o.formatDistance(e.chainedDistance+e.distance)})+"</div>"),t}function u(e,t){let o=n.create("div",{className:s+"Travel-Notes-IconCell",innerHTML:e.iconContent},t);"svg"===o.firstChild.tagName&&"TravelNotes-Roadbook-"===s&&o.firstChild.setAttributeNS(null,"viewBox","0 0 "+l+" "+l),n.create("div",{className:s+"Travel-Notes-Cell",innerHTML:d(e)},t),t.noteObjId=e.objId}function g(e){let t='<div class="'+s+'Route-Header-Name">'+e.name+"</div>";return 0!==e.distance&&(t+='<div class="'+s+'Route-Header-Distance">'+O.getText("HTMLViewsFactory - Distance",{distance:a.formatDistance(e.distance)})+"</div>"),E.travel.readOnly||"bike"===e.itinerary.transitMode||(t+='<div class="'+s+'Route-Header-Duration">'+O.getText("HTMLViewsFactory - Duration",{duration:a.formatTime(e.duration)})+"</div>"),e.itinerary.hasProfile&&(t+='<div class="'+s+'Route-Header-Ascent">'+O.getText("HTMLViewsFactory - Ascent",{ascent:e.itinerary.ascent.toFixed(0)})+'</div><div class="'+s+'Route-Header-Descent">'+O.getText("HTMLViewsFactory - Descent",{descent:e.itinerary.descent.toFixed(0)})+"</div>"),t}function f(){let e=n.create("div",{className:s+"Travel-Header"});n.create("div",{className:s+"Travel-Header-Name",innerHTML:E.travel.name},e);let t=r.defaultValue,o=0,i=0,l=E.travel.routes.iterator;for(;!l.done;)n.create("div",{className:s+"Travel-Header-RouteName",innerHTML:'<a href="#route'+l.value.objId+'">'+l.value.name+"</a>&nbsp;:&nbsp;"+a.formatDistance(l.value.distance)+"."},e),l.value.chain&&(t+=l.value.distance,o+=l.value.itinerary.ascent,i+=l.value.itinerary.descent);return n.create("div",{className:s+"Travel-Header-TravelDistance",innerHTML:O.getText("HTMLViewsFactory - Travel distance&nbsp;:&nbsp;{distance}",{distance:a.formatDistance(t)})},e),0!==o&&n.create("div",{className:s+"Travel-Header-TravelAscent",innerHTML:O.getText("HTMLViewsFactory - Travel ascent&nbsp;:&nbsp;{ascent}",{ascent:o.toFixed(0)})},e),0!==i&&n.create("div",{className:s+"Travel-Header-TravelDescent",innerHTML:O.getText("HTMLViewsFactory - Travel descent&nbsp;:&nbsp;{descent}",{descent:i.toFixed(0)})},e),e}function p(){let e=n.create("div",{className:s+"Travel-Notes"}),t=E.travel.notes.iterator;for(;!t.done;){let o=n.create("div",{className:s+"Travel-Notes-Row"},e);u(t.value,o)}return e}function v(e){return n.create("div",{className:s+"Route-Header",id:"route"+e.objId,innerHTML:g(e)})}function h(e){let t=n.create("div",{className:s+"Route-ManeuversAndNotes"}),o=e.notes.iterator,i=o.done,l=i?Number.MAX_VALUE:o.value.distance,d=l,g=e.itinerary.maneuvers.iterator,f=g.done,p=r.defaultValue;for(;!f||!i;){let r=n.create("div",{className:s+"Route-ManeuversAndNotes-Row"},t);if(p<=l){if(!f){r.className=s+"Route-Maneuvers-Row",n.create("div",{className:s+"Route-ManeuversAndNotes-IconCell TravelNotes-ManeuverNote-"+g.value.iconName},r);let t="<div>"+g.value.instruction+"</div>";0<g.value.distance&&(t+="<div>"+O.getText("HTMLViewsFactory - To next instruction&nbsp;:&nbsp;{distance}&nbsp;-&nbsp;{duration}",{distance:a.formatDistance(g.value.distance),duration:a.formatTime(g.value.duration)})+"</div>"),n.create("div",{className:s+"Route-ManeuversAndNotes-Cell",innerHTML:t},r),r.objId=c(),r.latLng=e.itinerary.itineraryPoints.getAt(g.value.itineraryPointObjId).latLng,r.maneuverObjId=g.value.objId,p+=g.value.distance,f=g.done,f&&(p=Number.MAX_VALUE)}}else if(!i&&(r.className=s+"Route-Notes-Row",u(o.value,r),r.objId=c(),r.latLng=o.value.latLng,r.noteObjId=o.value.objId,d=o.value.distance,i=o.done,l=i?Number.MAX_VALUE:o.value.distance,!i)){let e=o.value.distance-d;9<e&&n.create("div",{className:s+"NoteHtml-NextDistance",innerHTML:O.getText("HTMLViewsFactory - Next distance&nbsp;:&nbsp;{distance}",{distance:a.formatDistance(e)})},r.lastChild)}}return t}function m(e){let t="";return""!==e.itinerary.provider&&""!==e.itinerary.transitMode&&(t=O.getText("HTMLViewsFactory - Itinerary computed by {provider} and optimized for {transitMode}",{provider:e.itinerary.provider,transitMode:O.getText("HTMLViewsFactory - TransitMode "+e.itinerary.transitMode)})),n.create("div",{className:s+"RouteFooter",innerHTML:t})}function b(){return n.create("div",{className:s+"TravelFooter",innerHTML:O.getText("HTMLViewsFactory - Travel footer")})}function y(e){let t=n.create("div",{className:s+"RouteProfile",innerHTML:O.getText("HTMLViewsFactory - Profile")});return t.appendChild(i.createSvg(e)),t}return Object.seal({get travelHeaderHTML(){return f()},get travelNotesHTML(){return p()},get routeHeaderHTML(){return v(E.travel.editedRoute)},get routeManeuversAndNotesHTML(){return h(E.travel.editedRoute)},get routeFooterHTML(){return m(E.travel.editedRoute)},get travelFooterHTML(){return b()},get travelHTML(){return function(){let t=n.create("div",{className:s+"Travel"});t.appendChild(f()),t.appendChild(p());let o=E.travel.routes.iterator;for(;!o.done;){let r=e.routeEditor.displayEditionInHTMLPage&&o.value.objId===E.editedRouteObjId?E.travel.editedRoute:o.value;t.appendChild(v(r)),r.itinerary.hasProfile&&t.appendChild(y(r)),t.appendChild(h(r)),t.appendChild(m(r))}return t.appendChild(b()),t}()},getRouteHTML:e=>g(e),getNoteHTML:e=>d(e)})}function D(e){let t=A().getRoute(e.target.objId),o=R().getClosestLatLngDistance(t,[e.latlng.lat,e.latlng.lng]).distance;o+=t.chainedDistance,o=P().formatDistance(o);let r=E.mapObjects.get(e.target.objId);r.closeTooltip();let n=t.name;E.travel.readOnly||(n+=0===n.length?"":" - ",n+=o),r.setTooltipContent(n),r.openTooltip(e.latlng)}const H=function(){let t=A(),o=null,r=null;function a(e,t){t.objId=e,t.addTo(E.map),E.mapObjects.set(e,t)}function i(o){let r=t.getNoteAndRoute(o).note,n=E.travel.readOnly,i=L.marker(r.latLng,{icon:L.divIcon({iconSize:[e.note.grip.size,e.note.grip.size],iconAnchor:[e.note.grip.size/2,e.note.grip.size/2],html:"<div></div>"}),opacity:e.note.grip.opacity,draggable:!n});i.objId=r.objId;let l=L.divIcon({iconSize:[r.iconWidth,r.iconHeight],iconAnchor:[r.iconWidth/2,r.iconHeight/2],popupAnchor:[0,-r.iconHeight/2],html:r.iconContent,className:"TravelNotes-AllNotes "+e.note.style});let s=L.marker(r.iconLatLng,{zIndexOffset:100,icon:l,draggable:!n});s.objId=r.objId,s.bindPopup(e=>{let o=t.getNoteAndRoute(e.objId).note;return S("TravelNotes-").getNoteHTML(o)}),0!==r.tooltipContent.length&&(s.bindTooltip(e=>t.getNoteAndRoute(e.objId).note.tooltipContent),s.getTooltip().options.offset[0]=r.iconWidth/2);let d=L.polyline([r.latLng,r.iconLatLng],e.note.polyline);d.objId=r.objId;let c=L.layerGroup([s,d,i]);return c.markerId=L.Util.stamp(s),c.polylineId=L.Util.stamp(d),c.bulletId=L.Util.stamp(i),a(r.objId,c),{marker:s,polyline:d,bullet:i}}function s(t){t.dashArray>=e.route.dashChoices.length&&(t.dashArray=0);let o=e.route.dashChoices[t.dashArray].iDashArray;if(o){let e="",r=0;for(r=0;r<o.length-1;r++)e+=o[r]*t.width+",";return e+=o[r]*t.width,e}return null}return Object.seal({addRoute:e=>function(e){let o=t.getRoute(e),r=[],n=o.itinerary.itineraryPoints.iterator;for(;!n.done;)r.push(n.value.latLng);let d=L.polyline(r,{color:o.color,weight:o.width,dashArray:s(o)});a(o.objId,d),l.notEdited===o.edited&&(d.bindTooltip(o.name,{sticky:!0,direction:"right"}),d.on("mouseover",D),d.on("mousemove",D)),d.bindPopup(e=>{let o=t.getRoute(e.objId);return S("TravelNotes-").getRouteHTML(o)}),L.DomEvent.on(d,"click",e=>e.target.openPopup(e.latlng));let c=o.notes.iterator;for(;!c.done;)i(c.value.objId);return o}(e),addNote:e=>i(e),getDashArray:e=>s(e),zoomTo:(t,o)=>function(t,o){if(o){let e=[];o.forEach(t=>e=e.concat(t)),E.map.fitBounds(R().getLatLngBounds(e))}else E.map.setView(t,e.itineraryPointZoom)}(t,o),setLayer:e=>function(e){let t=null;t="wmts"===e.service.toLowerCase()?L.tileLayer(e.url):L.tileLayer.wms(e.url,e.wmsOptions),o&&E.map.removeLayer(o),E.map.addLayer(t),o=t,E.travel.readOnly||(E.map.getZoom()<(e.minZoom||0)&&E.map.setZoom(e.minZoom||0),E.map.setMinZoom(e.minZoom||0),E.map.getZoom()>(e.maxZoom||18)&&E.map.setZoom(e.maxZoom||18),E.map.setMaxZoom(e.maxZoom||18),e.bounds?(E.map.getBounds().intersects(e.bounds)&&!E.map.getBounds().contains(e.bounds)||(E.map.setMaxBounds(null),E.map.fitBounds(e.bounds),E.map.setZoom(e.minZoom||0)),E.map.setMaxBounds(e.bounds)):E.map.setMaxBounds(null)),E.map.fire("baselayerchange",t)}(e),onGeolocationStatusChanged:e=>function(e){n.active!==e&&r&&(E.map.removeLayer(r),r=null)}(e),onGeolocationPositionChanged:t=>function(t){let o=e.geoLocation.zoomToPosition;r&&(E.map.removeLayer(r),o=!1),r=L.circleMarker(L.latLng(t.coords.latitude,t.coords.longitude),{radius:e.geoLocation.radius,color:e.geoLocation.color}).bindTooltip(P().formatLatLng([t.coords.latitude,t.coords.longitude])).addTo(E.map),o&&E.map.setView(L.latLng(t.coords.latitude,t.coords.longitude),e.geoLocation.zoomFactor)}(t)})}();function U(){function e(e,t){let o=function(e){return-1<["setitinerary","updateitinerary","settravelnotes","updatetravelnotes","setsearch","updatesearch","expandrouteui","reducerouteui","setwaypointslist","setrouteslist","setprovider","providersadded","settransitmode"].indexOf(e)?document.getElementById("TravelNotes-Control-MainDiv"):-1<["removeobject","removeallobjects","zoomto","additinerarypointmarker","addsearchpointmarker","addrectangle","addwaypoint","layerchange","geolocationstatuschanged","geolocationpositionchanged","routeupdated","routepropertiesupdated","noteupdated","roadbookupdate","travelnotesfileloaded","profileclosed"].indexOf(e)?document:null}(e);if(o){let r=new Event(e);t&&(r.data=t),o.dispatchEvent(r)}}return Object.seal({dispatch:(t,o)=>e(t,o)})}var F={};function V(e){return Math.floor(Math.abs(e)+.5)*(e>=0?1:-1)}function k(e,t,o){var r=(e=V(e*o))-(t=V(t*o));r<<=1,e-t<0&&(r=~r);for(var n="";r>=32;)n+=String.fromCharCode(63+(32|31&r)),r>>=5;return n+=String.fromCharCode(r+63)}function z(e){for(var t=[],o=0;o<e.length;o++){var r=e[o].slice();t.push([r[1],r[0]])}return t}function B(){function e(e){let t={};0!==e.itinerary.itineraryPoints.length&&(t=e.itinerary.itineraryPoints[0].objType);let o={latLngs:[],distances:[],elevs:[],objIds:[],objType:t};e.itinerary.itineraryPoints.forEach(e=>{o.latLngs.push([e.lat,e.lng]),o.distances.push(e.distance),o.elevs.push(e.elev),o.objIds.push(e.objId)}),o.latLngs=F.encode(o.latLngs,6),e.itinerary.itineraryPoints=o}function t(e){e.itinerary.itineraryPoints.latLngs=F.decode(e.itinerary.itineraryPoints.latLngs,6);let t=[],o=0;e.itinerary.itineraryPoints.latLngs.forEach(r=>{let n={};n.lat=r[0],n.lng=r[1],n.distance=e.itinerary.itineraryPoints.distances[o],e.itinerary.itineraryPoints.elevs?n.elev=e.itinerary.itineraryPoints.elevs[o]:n.elev=a.defaultValue,n.objId=e.itinerary.itineraryPoints.objIds[o],n.objType=e.itinerary.itineraryPoints.objType,t.push(n),o++}),e.itinerary.itineraryPoints=t}function o(e){let o=e;return o.routes.forEach(t),o.editedRoute&&t(o.editedRoute),o}return Object.seal({decompress:e=>function(e){E.travel.object=o(e),E.editedRouteObjId=-1,E.travel.routes.forEach(e=>{l.notEdited!==e.edited&&(E.editedRouteObjId=e.objId)})}(e),decompressMerge:e=>function(e){let t=x();t.object=o(e);let r=t.routes.iterator;for(;!r.done;)E.travel.routes.add(r.value);let n=t.notes.iterator;for(;!n.done;)E.travel.notes.add(n.value)}(e),compress:()=>function(){let t=E.travel.object;return t.routes.forEach(e),e(t.editedRoute),t}()})}function W(){let e=U(),t=A(),o=[];function r(e){o.push(e.latLng),o.push(e.iconLatLng)}function n(e){e.itinerary.itineraryPoints.forEach(e=>o.push(e.latLng)),e.notes.forEach(e=>r(e))}return Object.seal({zoomToNote:o=>function(o){e.dispatch("zoomto",{latLng:t.getNoteAndRoute(o).note.latLng})}(o),zoomToRoute:r=>function(r){o=[],n(t.getRoute(r)),e.dispatch("zoomto",{geometry:[o]})}(r),zoomToTravel:()=>(o=[],E.travel.routes.forEach(e=>n(e)),-1!==E.travel.editedRouteObjId&&n(E.travel.editedRoute),E.travel.notes.forEach(e=>r(e)),void e.dispatch("zoomto",{geometry:[o]}))})}function Z(){let e=U();function t(){let t=E.travel.routes.iterator;for(;!t.done;)l.notEdited===t.value.edited&&e.dispatch("routeupdated",{removedRouteObjId:-1,addedRouteObjId:t.value.objId});-1!==E.editedRouteObjId&&e.dispatch("routeupdated",{removedRouteObjId:-1,addedRouteObjId:E.travel.editedRoute.objId});let o=E.travel.notes.iterator;for(;!o.done;)e.dispatch("noteupdated",{removedNoteObjId:-1,addedNoteObjId:o.value.objId});W().zoomToTravel(),e.dispatch("travelnotesfileloaded",{name:E.travel.name})}return Object.seal({openDistantFile:e=>function(e){B().decompress(e),E.travel.readOnly=!0,t()}(e),display:()=>t()})}F.decode=function(e,t){for(var o,r=0,n=0,a=0,i=[],l=0,s=0,d=null,c=Math.pow(10,Number.isInteger(t)?t:5);r<e.length;){d=null,l=0,s=0;do{s|=(31&(d=e.charCodeAt(r++)-63))<<l,l+=5}while(d>=32);o=1&s?~(s>>1):s>>1,l=s=0;do{s|=(31&(d=e.charCodeAt(r++)-63))<<l,l+=5}while(d>=32);n+=o,a+=1&s?~(s>>1):s>>1,i.push([n/c,a/c])}return i},F.encode=function(e,t){if(!e.length)return"";for(var o=Math.pow(10,Number.isInteger(t)?t:5),r=k(e[0][0],0,o)+k(e[0][1],0,o),n=1;n<e.length;n++){var a=e[n],i=e[n-1];r+=k(a[0],i[0],o),r+=k(a[1],i[1],o)}return r},F.fromGeoJSON=function(e,t){if(e&&"Feature"===e.type&&(e=e.geometry),!e||"LineString"!==e.type)throw new Error("Input must be a GeoJSON LineString");return F.encode(z(e.coordinates),t)},F.toGeoJSON=function(e,t){return{type:"LineString",coordinates:z(F.decode(e,t))}},"object"==typeof module&&module.exports&&(module.exports=F);const _=function(){let e=null;return Object.seal({getOpenPromise:()=>new Promise((function(t,o){if(e)return void t();let r=window.indexedDB.open("TravelNotesDb",1);r.onerror=function(){e=null,o(new Error("Not possible to open the db"))},r.onsuccess=function(o){e=o.target.result,t()},r.onupgradeneeded=function(t){e=t.target.result,e.createObjectStore("Travels",{keyPath:"UUID"})}})),getReadPromise:t=>function(t){return new Promise((function(o,r){if(!e)return void r(new Error("Database not opened"));let n=e.transaction(["Travels"],"readonly");n.onerror=function(){r(new Error("Transaction error"))},n.objectStore("Travels").get(t).onsuccess=function(e){o(e.target.result?e.target.result.data:null)}}))}(t),getWritePromise:(t,o)=>function(t,o){return new Promise((function(r,n){if(!e)return void n(new Error("Database not opened"));let a=null;try{a=e.transaction(["Travels"],"readwrite")}catch(e){return void n(e)}a.onerror=function(){n(new Error("Transaction error"))},a.objectStore("Travels").put({UUID:t,data:o}).onsuccess=function(){r()}}))}(t,o),closeDb:t=>function(t){if(!e)return;if(!t)return e.close(),void(e=null);let o=e.transaction(["Travels"],"readwrite");o.onerror=function(){};let r=o.objectStore("Travels").delete(t);r.onerror=function(){e.close(),e=null},r.onsuccess=function(){e.close(),e=null}}(t)})}();const X=function(){let e=null;function o(t){e.innerHTML='&copy; <a href="http://leafletjs.com/" target="_blank" title="Leaflet">Leaflet</a> | &copy; <a href="http://www.openstreetmap.org/copyright" target="_blank" title="OpenStreetMap contributors">OpenStreetMap contributors</a> '+t+'| &copy; <a href="https://github.com/wwwouaiebe" target="_blank" title="https://github.com/wwwouaiebe">Travel & Notes</a> '}return Object.seal({set attributions(e){o(e)},createUI:()=>(e=t().create("div",{id:"TravelNotes-AttributionsUI"},document.querySelector("body")),void o(""))})}();const G=function(){let t=n.disabled,o=null,r=U();function a(e){r.dispatch("geolocationpositionchanged",{position:e})}function i(){n.active===t&&(t=n.inactive),r.dispatch("geolocationstatuschanged",{status:t}),navigator.geolocation.clearWatch(o),o=null}function l(e){1===e.code&&(t=n.refusedByUser),i()}function s(){switch(t){case n.inactive:t=n.active,r.dispatch("geolocationstatuschanged",{status:t}),navigator.geolocation.getCurrentPosition(a,l,e.geoLocation.options),o=navigator.geolocation.watchPosition(a,l,e.geoLocation.options);break;case n.active:i()}return t}return t="geolocation"in navigator?n.inactive:n.disabled,Object.seal({get status(){return t},switch:()=>s()})}();const q=function(){let e=null,o=U(),r=t(),n=[{service:"wmts",url:"https://{s}.tile.osm.org/{z}/{x}/{y}.png",name:"OSM - Color",toolbar:{text:"OSM",color:"red",backgroundColor:"white"},providerName:"OSM",providerKeyNeeded:!1,attribution:""}];function a(e){o.dispatch("layerchange",{layer:e.target.layer}),X.attributions=e.target.layer.attribution}function i(t){r.create("div",{className:"TravelNotes-ViewerLayersToolbarUI-Button",title:t.name,layer:t,innerHTML:t.toolbar.text,style:"color:"+t.toolbar.color+";background-color:"+t.toolbar.backgroundColor},e).addEventListener("click",e=>{e.stopPropagation(),a(e)},a,!1)}return Object.seal({createUI:()=>(e=r.create("div",{id:"TravelNotes-ViewerLayersToolbarUI"},document.querySelector("body")),r.create("div",{className:"TravelNotes-ViewerLayersToolbarUI-Button",title:"My position",innerHTML:"&#x1f310;",style:"color:black;background-color:white"},e).addEventListener("click",e=>{e.stopPropagation(),G.switch()},!1),r.create("div",{className:"TravelNotes-ViewerLayersToolbarUI-Button",title:"Zoom on the travel",innerHTML:"&#x1f50d;",style:"color:black;background-color:white"},e).addEventListener("click",e=>{e.stopPropagation(),W().zoomToTravel()},!1),void n.forEach(i)),setLayer:e=>function(e){let t=n.find(t=>t.name===e)||n[0];o.dispatch("layerchange",{layer:t}),X.attributions=t.attribution}(e),setLayers:e=>function(e){e.forEach(e=>{e.providerKeyNeeded||n.push(e)})}(e)})}();const J=function(){function e(){document.addEventListener("routeupdated",e=>{e.data&&H.addRoute(e.data.addedRouteObjId)},!1),document.addEventListener("noteupdated",e=>{e.data&&(H.addNote(e.data.addedNoteObjId),function(){if(P().storageAvailable("localStorage")){let e=S("TravelNotes-Roadbook-");_.getOpenPromise().then(()=>{_.getWritePromise(E.UUID,e.travelHTML.outerHTML)}).then(()=>localStorage.setItem(E.UUID,Date.now())).catch(e=>console.log(e||"An error occurs when writing the content"))}}())},!1),document.addEventListener("zoomto",e=>{e.data&&H.zoomTo(e.data.latLng,e.data.geometry)},!1),document.addEventListener("layerchange",e=>{e.data&&H.setLayer(e.data.layer)}),document.addEventListener("geolocationpositionchanged",e=>{e.data&&H.onGeolocationPositionChanged(e.data.position)},!1),document.addEventListener("geolocationstatuschanged",e=>{e.data&&H.onGeolocationStatusChanged(e.data.status)},!1)}return Object.seal({addReadOnlyMap:(t,r)=>function(t,r){e(),X.createUI(),r&&q.createUI(),q.setLayer("OSM - Color"),t&&o().getJsonPromise(t).then(Z().openDistantFile).catch(e=>{console.log(e||"Not possible to load the .trv file"),E.map.setView([i.defaultValue,i.defaultValue],2)})}(t,r)})}();!function(){let r=null,n=null,a=!1;decodeURI(window.location.search).substr(1).split("&").forEach(e=>{"fil="===e.substr(0,4).toLowerCase()?n=decodeURIComponent(escape(atob(e.substr(4)))):"lng="===e.substr(0,4).toLowerCase()?r=e.substr(4).toLowerCase():"lay"===e.substr(0,3).toLowerCase()&&(a=!0)}),window.L.travelNotes=J;let l=o(),s=[l.getJsonPromise(window.location.href.substr(0,window.location.href.lastIndexOf("/")+1)+"TravelNotesConfig.json"),l.getJsonPromise(window.location.href.substr(0,window.location.href.lastIndexOf("/")+1)+"TravelNotes"+(r||e.language).toUpperCase()+".json"),l.getJsonPromise(window.location.href.substr(0,window.location.href.lastIndexOf("/")+1)+"TravelNotesLayers.json")];Promise.all(s).then(o=>{if(r&&(o[0].language=r),e.overload(o[0]),O.setTranslations(o[1]),q.setLayers(o[2]),e.autoLoad){t().create("div",{id:"Map"},document.querySelector("body"));let e=window.L.map("Map",{attributionControl:!1,zoomControl:!1}).setView([i.defaultValue,i.defaultValue],0);E.map=e,J.addReadOnlyMap(n,a)}}).catch(e=>console.log(e||"An error occurs when downloading the json configuration files"))}()}();